/*
 *  This file is part of the Jikes RVM project (http://jikesrvm.org).
 *
 *  This file is licensed to You under the Eclipse Public License (EPL);
 *  You may not use this file except in compliance with the License. You
 *  may obtain a copy of the License at
 *
 *      http://www.opensource.org/licenses/eclipse-1.0.php
 *
 *  See the COPYRIGHT.txt file distributed with this work for information
 *  regarding copyright ownership.
 */
 
option baseHeap "204k";
option baseHeap64 "40960k";

 /*
  * MMTk test script.  Allocate a large object holding pointers to objects of a wide
  * (random) sizes.  Keep 200 live objects, and keep the newest objects
  * live.
  *
  * Highly non-generational :)  Basic exercise of multi-class allocation.
  */
void main() {

  int i=0;
  int k=0;
  int j=0;
  object parent = alloc(20000, 0, false);       // Parent object with 'live' pointers
  while (i < 10) {             // loop for a while
    k=k+1;
    if (k % 6 ==0) {
        k=1;
    }
    j=0;
    while (j < 20000) {
        parent.object[j]= alloc(0, k*16, false);
        j=j+1;
    }
    gc();
    print("force gc!!!!!!!");
    i=i+1;
  }
}
